Hirb::View.enabled?
exit
user = User.new
user = User.new
exit
user = User.new
User.all
user  = User.new
Hirb.disable
user = User.new
user.save
user.errors.full_messages
user.password = "あああああああああ"
user.password
user.save
user.errors.full_messages
exit
user = User.new(name: "test", email: "test@example.com", password: "password")
Hirb.disable
user = User.new(name: "test", email: "test@example.com", password: "password")
user.save
exit
Hirb.disable
domain = "@example.com"
email = "a" * (256 - domain.length) + domain
email.length
user = User.new(name: "test", email: email, password: "password")
user.save
reload
load
exit
Hirb.disable
domain = "@example.com"
email = "a" * (256 - domain.length) + domain
email.length
user = User.new(name: "test", email: email, password: "password")
user.save
user.errors.full_messages
email = "test@example@com"
user.email = email
user.save
user.errors.full_messages
email = "active@example.com"
User.create(name: "active", email: email, password: "password", activated: true)
user = User.new(name: "test", email: email, password: "password")
user.save
user.errors.full_messages
email = "TEST@test.COM"
user = User.new(name: "test", email: email, password: "password")
user.save
user.email
exit
User.all
exit
payload = { sub: 1 }
Hirb.disable
Hirb.disable
payload = { sub: 1 }
payload
secret_key = Rails.application.credentials.secret_key_base
token = JWT.encode(payload, secret_key)
token
JWT.decode(token, secret_key)
exit
payload = { sub: 1 }
Hirb.disable
payload = { sub: 1 }
secret_key = Rails.application.credentials.secret_key_base
token = JWT.encode(payload, secret_key)
token
JWT.decode(token, secret_key)
token2 = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjJ9.JM1y2F5gk72w5e7Djb3apcUqgJrmT8yR5eXirQjvXiQ"
JWT.decode(token2, secret_key)
key = "230sdjhviuhr8249492"
token = JWT.encode(payload, key)
JWT.decode(token, key)
JWT.decode(token, key+"a")
JWT.decode(token, nil)
exit
UserAuth.token_issuer
UserAuth.token_audience
exit
user.remember("a")
Hirb.disable
user.remember("a")
User.first
user = User.first
user.remember("a")
user
user.forget
user
token1 = UserAuth::RefreshToken.new(user_id: user.id)
token1
token1.payload[:jti]
user.reload
user.refresh_jti == token1.payload[:jti]
UserAuth::RefreshToken.new(token: token1.token).entity_for_user
exit
Hirb.distable
Hirb.disable
user = User.first
UserAuth::AccessToken.new(user_id: user.id)
UserAuth::AccessToken.new(token: token.token).entitiy_for_user
UserAuth::AccessToken.new(token: token.token)
UserAuth::AccessToken.new(user_id: user.id)
UserAuth::AccessToken.new(token: token.token)
user
token = UserAuth::AccessToken.new(token: token.token)
token = UserAuth::AccessToken.new(user_id: user.id)
token
UserAuth::AccessTOken.new(token: token.token)
UserAuth::AccessToken.new(token: token.token)
exit
